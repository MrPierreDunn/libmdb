FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_valid_data_admin_create_user - AssertionError: Если POST-запрос от имени администратора к эндпоинту `/api/v1/users/` содержит корректные данные - должен вернуться ответ со статусом 201.
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data0-messege0] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/` проверяется длина поля `email`: его содержимое не должно быт...
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data1-messege1] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/` проверяется длина поля `username`: его содержимое не должно ...
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data2-messege2] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/` содержание поля `username` проверяется на соответствие патте...
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data3-messege3] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/` проверяется длина поля `first_name`: его содержимое не должн...
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_admin_create_user_length_and_simbols_validation[data4-messege4] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/` проверяется длина поля `last_name`: его содержимое не должно...
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_obtain_jwt_token_invalid_data - AssertionError: Проверьте, что POST-запрос с корректными данными, отправленный на `/api/v1/auth/signup/`, возвращает ответ со статусом 200.
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_00_registration_same_email_restricted - AssertionError: Проверьте, что POST-запрос к `/api/v1/auth/signup/` с корректными возвращает статус-код 200.
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_get_new_confirmation_code_for_existing_user - AssertionError: Проверьте, что POST-запрос с корректными данными, отправленный на эндпоинт `/api/v1/auth/signup/`, возвращает ответ со статусом 200.
FAILED tests/test_00_user_registration.py::Test00UserRegistration::test_get_confirmation_code_for_user_created_by_admin - AssertionError: Если POST-запрос администратора на эндпоинт `/api/v1/users/` содержит корректные данные - должен быть создан новый пользователь.
FAILED tests/test_01_users.py::Test01UserAPI::test_01_users_not_authenticated - AssertionError: Проверьте, что GET-запрос к `/api/v1/users/` без токена авторизации возвращается ответ со статусом 401.
FAILED tests/test_01_users.py::Test01UserAPI::test_02_users_username_not_authenticated - AssertionError: Проверьте, что GET-запрос `/api/v1/users/{username}/` без токена авторизации возвращает ответ со статусом 401.
FAILED tests/test_01_users.py::Test01UserAPI::test_03_users_me_not_authenticated - AssertionError: Проверьте, что GET-запрос `/api/v1/users/me/` без токена авторизации возвращает ответ со статусом 401.
FAILED tests/test_01_users.py::Test01UserAPI::test_04_users_get_admin - AssertionError: Проверьте, что GET-запрос к `/api/v1/users/` с токеном авторизации возвращает ответ со статусом 200.
FAILED tests/test_01_users.py::Test01UserAPI::test_04_02_users_get_search - AssertionError: Проверьте, что GET-запрос к `/api/v1/users/?search={username}` возвращает результаты поиска по значению ключа `results` в виде списка.
FAILED tests/test_01_users.py::Test01UserAPI::test_05_01_users_post_admin_bad_requests - AssertionError: Если POST-запрос администратора к `/api/v1/users/` не содержит необходимых данных - должен вернуться ответ со статусом 400.
FAILED tests/test_01_users.py::Test01UserAPI::test_05_02_users_post_admin_user_creation[data0-] - AssertionError: Если POST-запрос администратора к `/api/v1/users/` содержит корректные данные - должен вернуться ответ со статусом 201.
FAILED tests/test_01_users.py::Test01UserAPI::test_05_02_users_post_admin_user_creation[data1-без указания роли нового пользователя ] - AssertionError: Если POST-запрос администратора к `/api/v1/users/` содержит корректные данные без указания роли нового пользователя - должен в...
FAILED tests/test_01_users.py::Test01UserAPI::test_05_03_users_post_response_has_data - AssertionError: Если POST-запрос администратора к `/api/v1/users/` содержит корректные данные - должен вернуться ответ со статусом 201.
FAILED tests/test_01_users.py::Test01UserAPI::test_05_04_users_post_user_superuser - AssertionError: Если POST-запрос суперпользователя к `/api/v1/users/` содержит корректные данные - должен вернуться ответ со статусом 201.
FAILED tests/test_01_users.py::Test01UserAPI::test_06_users_username_get_admin - AssertionError: Проверьте, что GET-запрос администратора к `/api/v1/users/{username}/` возвращает ответ со статусом 200.
FAILED tests/test_01_users.py::Test01UserAPI::test_07_01_users_username_patch_admin - AssertionError: Если PATCH-запрос администратора, отправленный к `/api/v1/users/{username}/`, содержит корректные данные - должен вернуться ответ со статусом 200.
FAILED tests/test_01_users.py::Test01UserAPI::test_07_05_users_username_put_not_allowed - AssertionError: Проверьте, что PUT-запрос к `/api/v1/users/{username}/` не предусмотрен и возвращает статус 405.
FAILED tests/test_01_users.py::Test01UserAPI::test_08_01_users_username_delete_admin - AssertionError: Проверьте, что DELETE-запрос администратора к `/api/v1/users/{username}/` возвращает ответ со статусом 204.
FAILED tests/test_01_users.py::Test01UserAPI::test_08_04_users_username_delete_superuser - AssertionError: Проверьте, что DELETE-запрос суперпользователя к `/api/v1/users/{username}/` возвращает ответ со статусом 204.
FAILED tests/test_01_users.py::Test01UserAPI::test_09_users_me_get - AssertionError: Проверьте, что GET-запрос обычного пользователя к `/api/v1/users/me/` возвращает ответ со статусом 200.
FAILED tests/test_01_users.py::Test01UserAPI::test_09_02_users_me_delete_not_allowed - AssertionError: Проверьте, что DELETE-запрос к `/api/v1/users/me/` возвращает ответ со статусом 405.
FAILED tests/test_01_users.py::Test01UserAPI::test_10_01_users_me_patch - AssertionError: Проверьте, что PATCH-запрос к `/api/v1/users/me/` доступен пользователям всех ролей и возвращает ответ со статусом 200.
FAILED tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data0-messege0] - AssertionError: Проверьте, что при обработке PATCH-запроса к `/api/v1/users/me/` проверяется длина поля `email`: его содержимое не должно быть длиннее 254 символа.
FAILED tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data1-messege1] - AssertionError: Проверьте, что при обработке PATCH-запроса к `/api/v1/users/me/` проверяется длина поля `username`: его содержимое не должно быть длиннее 150 символов.
FAILED tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data2-messege2] - AssertionError: Проверьте, что при обработке PATCH-запроса к `/api/v1/users/me/` содержание поля `username` проверяется на соответствие паттерну, указанному в спецификации: ...
FAILED tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data3-messege3] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/me/` проверяется длина поля `first_name`: его содержимое не должно быть длиннее 150 символов.        
FAILED tests/test_01_users.py::Test01UserAPI::test_10_02_users_me_has_field_validation[data4-messege4] - AssertionError: Проверьте, что при обработке POST-запроса к `/api/v1/users/me/` проверяется длина поля `last_name`: его содержимое не должно быть длиннее 150 символов.
FAILED tests/test_01_users.py::Test01UserAPI::test_10_03_users_me_patch_change_role_not_allowed - AssertionError: Проверьте, что PATCH-запрос пользователя с ролью `user` к `/api/v1/users/me/` возвращает ответ со статусом 200.